<Styles
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:assists="clr-namespace:Material.Styles.Assists"
  xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple">

  <Style Selector="Button,ToggleButton">
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="4" />
      <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
      <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
      <Setter Property="Cursor" Value="Hand" />
      <Setter Property="Padding" Value="16 4 16 4" />
      <Setter Property="Height" Value="32" />
      <Setter Property="assists:ShadowAssist.ShadowDepth" Value="Depth1" />
      <Setter Property="TextBlock.FontWeight" Value="Medium" />
      <Setter Property="TextBlock.FontSize" Value="14" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="ClipToBounds" Value="False" />
      <Setter Property="Template">
          <ControlTemplate>
              <Border Name="buttonBorder" ClipToBounds="False"
                      Background="{TemplateBinding Background}"
                      CornerRadius="{TemplateBinding assists:ButtonAssist.CornerRadius}"
                      assists:ShadowAssist.ShadowDepth="{TemplateBinding assists:ShadowAssist.ShadowDepth}">
                  <ripple:RippleEffect RippleFill="{DynamicResource MaterialDesignFlatButtonRipple}">
                      <ContentPresenter Name="PART_ContentPresenter"
                                        CornerRadius="{TemplateBinding assists:ButtonAssist.CornerRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Padding="{TemplateBinding Padding}"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                  </ripple:RippleEffect>
              </Border>
          </ControlTemplate>
      </Setter>
  </Style>

  <Style Selector="Button:disabled:not(.no-material),ToggleButton:disabled:not(.no-material)">
      <Setter Property="Opacity" Value="0.23" />
  </Style>

  <Style
      Selector="Button:pointerover:not(.no-material) /template/ Border#buttonBorder,
  ToggleButton:pointerover:not(.no-material) /template/ Border#buttonBorder">
      <Setter Property="assists:ShadowAssist.Darken" Value="True" />
  </Style>

  <Style Selector="Button.Tool, ToggleButton.Tool, Button.Flat, ToggleButton.Flat">
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
    <Setter Property="Padding" Value="16 4 16 4" />
    <Setter Property="Height" Value="32" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="buttonBorder" ClipToBounds="False"
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding assists:ButtonAssist.CornerRadius}">
          <ripple:RippleEffect RippleFill="{DynamicResource MaterialDesignFlatButtonRipple}">
            <ContentPresenter Name="PART_ContentPresenter"
                              CornerRadius="{TemplateBinding assists:ButtonAssist.CornerRadius}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Content="{TemplateBinding Content}"
                              Padding="{TemplateBinding Padding}"
                              TextBlock.Foreground="{TemplateBinding Foreground}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </ripple:RippleEffect>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector="Button.DrawerItem, ToggleButton.DrawerItem"> 
    <Setter Property="Height" Value="48"/>
  </Style>

  <Style Selector="Button.Light, ToggleButton.Light">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueLightBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
  </Style>
  <Style Selector="Button.Dark, ToggleButton.Dark">
    <Setter Property="Background" Value="{DynamicResource PrimaryHueDarkBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueDarkBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkForegroundBrush}"/>
  </Style>
  <Style Selector="Button.Accent, ToggleButton.Accent">
    <Setter Property="Background" Value="{DynamicResource SecondaryHueMidBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryHueMidBrush}"/>
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}"/>
  </Style>

  <Style Selector="Button.Accent.Tool, Button.Accent.Flat">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}"/>
  </Style>

    <!-- Designer preview -->

  <Design.PreviewWith>
    <Border Padding="20">
      <StackPanel>
        <Button Classes="default" Content="Test Control"/>
        <Button Classes="Tool" Content="Test Control"/>
      </StackPanel>
    </Border>
  </Design.PreviewWith>
</Styles>

