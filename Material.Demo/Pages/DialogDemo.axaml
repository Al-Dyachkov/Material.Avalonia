<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:styles="clr-namespace:Material.Styles;assembly=Material.Styles"
             xmlns:viewModels="clr-namespace:Material.Demo.ViewModels"
             xmlns:dialogHost="clr-namespace:DialogHost;assembly=DialogHost.Avalonia"
             xmlns:models="clr-namespace:Material.Demo.Models"
             x:Class="Material.Demo.Pages.DialogDemo"
             x:DataType="viewModels:DialogDemoViewModel">
  <UserControl.Resources>
    <StackPanel x:Key="Sample2View">
      <ProgressBar Classes="Circle" IsIndeterminate="True" />
      <Button Margin="0 16 0 0"
              Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
        CLOSE
      </Button>
    </StackPanel>
  </UserControl.Resources>
  <dialogHost:DialogHost Identifier="MainDialogHost">
    <dialogHost:DialogHost.DialogContentTemplate>
      <DataTemplate DataType="models:Sample2Model">
        <StackPanel>
          <TextBlock TextAlignment="Center">Your lucky number:</TextBlock>
          <TextBlock Classes="Body1"
                     TextAlignment="Center"
                     Text="{Binding Number}" />
          <Button Margin="0 8 0 0"
                  Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=dialogHost:DialogHost}, Path=CloseDialogCommand}">
            THANKS, CLOSE
          </Button>
        </StackPanel>
      </DataTemplate>
    </dialogHost:DialogHost.DialogContentTemplate>
    <StackPanel Margin="16, 0">
      <TextBlock Classes="Headline4 Subheadline" Text="Dialogs" />

      <WrapPanel>
        <WrapPanel.Styles>
          <Style Selector="WrapPanel > StackPanel,
               WrapPanel > Grid">
            <Setter Property="Width" Value="300" />
            <Setter Property="MinHeight" Value="300" />
          </Style>
          <Style Selector="WrapPanel > StackPanel > StackPanel,
               WrapPanel > Grid > StackPanel">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="8" />
          </Style>
          <Style
            Selector="WrapPanel > Grid > StackPanel > StackPanel,
               WrapPanel > StackPanel > StackPanel > StackPanel">
            <Setter Property="Margin" Value="8" />
          </Style>
        </WrapPanel.Styles>
        <Grid>
          <TextBlock Classes="Headline6 Subheadline2" Text="From DialogHost" />
          <StackPanel>
            <TextBlock TextWrapping="Wrap">Top level dialog with custom corner radius, using OpenDialog, passing content via the Parameter. You can pass a view model, provided a corresponding DataTemplate can be found in the scope of the root DialogHost.</TextBlock>
            <StackPanel Margin="8 8 8 0">
              <Button Margin="8" Click="OpenDialogWithView">PASS VIEW</Button>
              <Button Margin="8" Click="OpenDialogWithModel">PASS MODEL</Button>
              <Button Margin="8" Click="OpenMoreDialogHostExamples">MORE EXAMPLES</Button>
            </StackPanel>
          </StackPanel>
        </Grid>
        <StackPanel>
          <TextBlock Classes="Headline6 Subheadline2" Text="In messagebox" />
          <StackPanel>
            <StackPanel>
              <Button Content="Show dialog #1" Command="{Binding Dialog1}" />
              <TextBlock Text="{CompiledBinding Dialog1Result}"
                         IsVisible="{CompiledBinding Dialog1Result, FallbackValue=False, 
                       Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="Show dialog #2" Command="{Binding Dialog2}" />
              <TextBlock Text="{CompiledBinding Dialog2Result}"
                         IsVisible="{CompiledBinding Dialog2Result, FallbackValue=False,
                       Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="Show dialog #3" Command="{Binding Dialog3}" />
              <TextBlock Text="{CompiledBinding Dialog3Result}"
                         IsVisible="{CompiledBinding Dialog3Result,
                          FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="Show dialog #4" Command="{Binding Dialog4}" />
              <TextBlock Text="{CompiledBinding Dialog4Result}"
                         IsVisible="{CompiledBinding Dialog4Result,
                       FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="Login dialog" Command="{Binding LoginDialog}" />
              <TextBlock Text="{CompiledBinding LoginDialogResult}"
                         IsVisible="{CompiledBinding LoginDialogResult,
                       FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="Rename file dialog" Command="{Binding FolderNameDialog}" />
              <TextBlock Text="{CompiledBinding FolderNameDialogResult}"
                         IsVisible="{CompiledBinding FolderNameDialogResult,
                       FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="TimePicker dialog" Command="{Binding TimePickerDialog}" />
              <TextBlock Text="{CompiledBinding TimePickerDialogResult}"
                         IsVisible="{CompiledBinding TimePickerDialogResult,
                       FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
            <StackPanel>
              <Button Content="DatePicker dialog" Command="{Binding DatePickerDialog}" />
              <TextBlock Text="{CompiledBinding DatePickerDialogResult}"
                         IsVisible="{CompiledBinding DatePickerDialogResult,
                       FallbackValue=False, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                         Margin="8" HorizontalAlignment="Center" />
            </StackPanel>
          </StackPanel>
        </StackPanel>
      </WrapPanel>
    </StackPanel>
  </dialogHost:DialogHost>
</UserControl>